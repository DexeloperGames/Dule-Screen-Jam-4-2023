[gd_resource type="VisualShader" load_steps=14 format=3 uid="uid://dybyjhfmypbgj"]

[ext_resource type="Texture2D" uid="uid://dqja3owhchcmj" path="res://bubblebase.png" id="1_qsv5m"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_wd6s8"]
parameter_name = "Note1Color"
qualifier = 1

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_30hoy"]
parameter_name = "Note2Color"
qualifier = 1

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_3bale"]
parameter_name = "Note3Color"
qualifier = 1

[sub_resource type="VisualShaderNodeIntParameter" id="VisualShaderNodeIntParameter_gmoug"]
parameter_name = "NoteType"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_3b6mf"]
texture = ExtResource("1_qsv5m")

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_h7dja"]
default_input_values = [0, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_m4e8a"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, 0.5]
op_type = 4

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_3lm07"]
constant = Color(0.851526, 0.000436835, 0.822133, 1)

[sub_resource type="VisualShaderNodeRemap" id="VisualShaderNodeRemap_bu2vc"]
default_input_values = [1, 0.0, 2, 0.288, 3, 0.0, 4, 1.0]

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_igoo4"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_yy5el"]
parameter_name = "Note0Color"
qualifier = 1

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_idiev"]
size = Vector2(817.63, 411.64)
expression = "switch(Color_Index){
	case 0: OutputColor = Color0; break;
	case 1: OutputColor = Color1; break;
	case 2: OutputColor = Color2; break;
	case 3: OutputColor = Color3; break;
}"

[resource]
code = "shader_type canvas_item;
global uniform vec4 Note0Color : source_color;
global uniform vec4 Note1Color : source_color;
global uniform vec4 Note2Color : source_color;
global uniform vec4 Note3Color : source_color;
uniform int NoteType;
uniform sampler2D tex_frg_2;



void fragment() {
// ColorParameter:8
	vec4 n_out8p0 = Note0Color;


// ColorParameter:10
	vec4 n_out10p0 = Note1Color;


// ColorParameter:11
	vec4 n_out11p0 = Note2Color;


// ColorParameter:12
	vec4 n_out12p0 = Note3Color;


// IntParameter:13
	int n_out13p0 = NoteType;


	vec3 n_out9p0;
// Expression:9
	n_out9p0 = vec3(0.0, 0.0, 0.0);
	{
		switch(n_out13p0){
			case 0: n_out9p0 = vec3(n_out8p0.xyz); break;
			case 1: n_out9p0 = vec3(n_out10p0.xyz); break;
			case 2: n_out9p0 = vec3(n_out11p0.xyz); break;
			case 3: n_out9p0 = vec3(n_out12p0.xyz); break;
		}
	}


// Texture2D:2
	vec4 n_out2p0 = texture(tex_frg_2, UV);


	float n_out6p0;
// Remap:6
	float n_in6p1 = 0.00000;
	float n_in6p2 = 0.28800;
	float n_in6p3 = 0.00000;
	float n_in6p4 = 1.00000;
	{
		float __input_range = n_in6p2 - n_in6p1;
		float __output_range = n_in6p4 - n_in6p3;
		n_out6p0 = n_in6p3 + __output_range * ((n_out2p0.x - n_in6p1) / __input_range);
	}


// Clamp:7
	float n_in7p1 = 0.00000;
	float n_in7p2 = 1.00000;
	float n_out7p0 = clamp(n_out6p0, n_in7p1, n_in7p2);


// Mix:4
	vec3 n_in4p1 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out4p0 = mix(n_out9p0, n_in4p1, n_out7p0);


// VectorDecompose:3
	float n_out3p0 = n_out2p0.x;
	float n_out3p1 = n_out2p0.y;
	float n_out3p2 = n_out2p0.z;
	float n_out3p3 = n_out2p0.w;


// Output:0
	COLOR.rgb = n_out4p0;
	COLOR.a = n_out3p3;


}
"
graph_offset = Vector2(-542.53, -107.265)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(460, 280)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_3b6mf")
nodes/fragment/2/position = Vector2(-640, 680)
nodes/fragment/3/node = SubResource("VisualShaderNodeVectorDecompose_h7dja")
nodes/fragment/3/position = Vector2(40, 360)
nodes/fragment/4/node = SubResource("VisualShaderNodeMix_m4e8a")
nodes/fragment/4/position = Vector2(60, 200)
nodes/fragment/5/node = SubResource("VisualShaderNodeColorConstant_3lm07")
nodes/fragment/5/position = Vector2(-1760, 80)
nodes/fragment/6/node = SubResource("VisualShaderNodeRemap_bu2vc")
nodes/fragment/6/position = Vector2(-540, 380)
nodes/fragment/7/node = SubResource("VisualShaderNodeClamp_igoo4")
nodes/fragment/7/position = Vector2(-240, 380)
nodes/fragment/8/node = SubResource("VisualShaderNodeColorParameter_yy5el")
nodes/fragment/8/position = Vector2(-1500, -140)
nodes/fragment/9/node = SubResource("VisualShaderNodeExpression_idiev")
nodes/fragment/9/position = Vector2(-1000, -80)
nodes/fragment/9/size = Vector2(817.63, 411.64)
nodes/fragment/9/input_ports = "0,4,Color0;1,4,Color1;2,4,Color2;3,4,Color3;4,1,Color_Index;"
nodes/fragment/9/output_ports = "0,4,OutputColor;"
nodes/fragment/9/expression = "switch(Color_Index){
	case 0: OutputColor = Color0; break;
	case 1: OutputColor = Color1; break;
	case 2: OutputColor = Color2; break;
	case 3: OutputColor = Color3; break;
}"
nodes/fragment/10/node = SubResource("VisualShaderNodeColorParameter_wd6s8")
nodes/fragment/10/position = Vector2(-1480, 20)
nodes/fragment/11/node = SubResource("VisualShaderNodeColorParameter_30hoy")
nodes/fragment/11/position = Vector2(-1500, 140)
nodes/fragment/12/node = SubResource("VisualShaderNodeColorParameter_3bale")
nodes/fragment/12/position = Vector2(-1580, 320)
nodes/fragment/13/node = SubResource("VisualShaderNodeIntParameter_gmoug")
nodes/fragment/13/position = Vector2(-1600, 520)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 0, 3, 3, 0, 1, 4, 0, 0, 0, 2, 0, 6, 0, 6, 0, 7, 0, 7, 0, 4, 2, 8, 0, 9, 0, 10, 0, 9, 1, 11, 0, 9, 2, 12, 0, 9, 3, 9, 0, 4, 0, 13, 0, 9, 4)
